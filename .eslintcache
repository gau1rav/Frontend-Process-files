[{"/home/gau1rav/Desktop/React/elucidata-client/src/index.js":"1","/home/gau1rav/Desktop/React/elucidata-client/src/App.js":"2","/home/gau1rav/Desktop/React/elucidata-client/src/reportWebVitals.js":"3","/home/gau1rav/Desktop/React/elucidata-client/src/pages/Home.js":"4","/home/gau1rav/Desktop/React/elucidata-client/src/components/Navbar.js":"5","/home/gau1rav/Desktop/React/elucidata-client/src/components/DragAndDrop.js":"6"},{"size":534,"mtime":1608618762650,"results":"7","hashOfConfig":"8"},{"size":528,"mtime":1608618412826,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608618412826,"results":"10","hashOfConfig":"8"},{"size":7239,"mtime":1608708030070,"results":"11","hashOfConfig":"8"},{"size":277,"mtime":1608627859117,"results":"12","hashOfConfig":"8"},{"size":3626,"mtime":1608632633398,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1co255u",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/home/gau1rav/Desktop/React/elucidata-client/src/index.js",["30"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Home from './pages/Home'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["31","32"],"/home/gau1rav/Desktop/React/elucidata-client/src/App.js",[],"/home/gau1rav/Desktop/React/elucidata-client/src/reportWebVitals.js",[],"/home/gau1rav/Desktop/React/elucidata-client/src/pages/Home.js",["33","34","35","36"],"import React from 'react';\nimport axios from 'axios';\n\nimport Navbar from '../components/Navbar';\nimport DragAndDrop from '../components/DragAndDrop';\n\nimport {ReactComponent as Upload_Icon} from '../svgs/upload.svg';\n\nimport '../css/Home.css';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected_file: null,\n      filename: \"\",\n      browse_label: \"Select File\",\n      service_requested: false\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('dragover', function(e) {\n      e.preventDefault();\n    }, false);\n\n    window.addEventListener('drop', function(e){\n      e.preventDefault();\n    }, false);\n  }\n\n  set_file_states = (file) => {\n    this.setState({\n      selected_file: file,\n      filename: file.name,\n      browse_label: \"Change File\"\n    })\n  }\n\n  handleDrop = (file) => {\n    console.log(file.name);\n    this.set_file_states(file);\n  }\n\n  select_file = (e) => {\n    this.set_file_states(e.target.files[0]);\n  }\n\n  getZipFile(data: any) {\n    const blob = new Blob([data], {'type':\"application/octet-stream\"});\n    var a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.download = \"result.zip\";\n    a.click();\n  }\n\n  handleError = (err) => {\n    if(err.response) {\n        const reader = new FileReader();\n\n        reader.readAsText(err.response.data);\n\n        reader.onload = function() {\n          console.log(reader.result);\n          alert(reader.result);\n        };\n\n        reader.onerror = function() {\n          console.log(reader.error);\n        };\n    }\n  }\n\n  upload_file = () => {\n    if(this.state.selected_file == null) {\n      alert('Please select a file before uploading');\n      return;\n    }\n\n    var formData = new FormData();\n    formData.append('file', this.state.selected_file)\n\n    axios.post('http://localhost:5000/upload', formData , {\n      headers: {\n        'id': '001'\n      }\n    })\n      .then(res => alert(res.data))\n      .catch(error => {\n        if(error.response) alert(error.response.data)\n      })\n  }\n\n  perform_task1 = () => {\n    var filename = this.state.filename\n\n    if(filename == \"\") {\n      alert('Please select a query file before this operation')\n      return;\n    }\n\n    this.setState({service_requested: true});\n\n    axios.get('http://localhost:5000/filter_compoundID', {\n      headers: {\n        'id': '001',\n        'filename': filename,\n        'Cache-Control':  'no-cache, no-store, must-revalidate, post-check=0, pre-check=0',\n        'Pragma': 'no-cache'\n      },\n      responseType: \"blob\"\n    })\n    .then(res => {\n      this.getZipFile(res.data);\n      this.setState({service_requested: false});\n    })\n    .catch(error => {\n      this.handleError(error);\n      this.setState({service_requested: false});\n    })\n  }\n\n  perform_task2 = () => {\n    var filename = this.state.filename;\n\n    if(filename == \"\") {\n      alert('Please select a query file before this operation')\n      return;\n    }\n\n    this.setState({service_requested: true});\n\n    axios.get('http://localhost:5000/roundoff_retention', {\n      headers: {\n        'id': '001',\n        'filename': filename,\n        'Cache-Control':  'no-cache, no-store, must-revalidate, post-check=0, pre-check=0',\n        'Pragma': 'no-cache'\n      },\n      responseType: \"blob\"\n    })\n    .then(res => {\n      this.getZipFile(res.data);\n      this.setState({service_requested: false});\n    })\n    .catch(error => {\n      this.handleError(error);\n      this.setState({service_requested: false});\n    }\n    )\n  }\n\n  perform_task3 = () => {\n    var filename = this.state.filename;\n\n    if(filename == \"\") {\n      alert('Please select a query file before this operation')\n      return;\n    }\n\n    this.setState({service_requested: true});\n\n    axios.get('http://localhost:5000/find_mean', {\n      headers: {\n        'id': '001',\n        'filename': filename,\n        'Cache-Control':  'no-cache, no-store, must-revalidate, post-check=0, pre-check=0',\n        'Pragma': 'no-cache'\n      },\n      responseType: \"blob\"\n    })\n    .then(res => {\n      this.getZipFile(res.data);\n      this.setState({service_requested: false});\n    })\n    .catch(error => {\n      this.handleError(error);\n      this.setState({service_requested: false});\n    })\n  }\n\n  render() {\n    return(\n      <div className = \"page_container\">\n        <Navbar />\n\n        <div className = \"file_manager_container\">\n\n          <div className = \"file_select_container\">\n\n            <DragAndDrop handleDrop={this.handleDrop}>\n\n              <div className = \"drag_drop_ui_container\">\n                <Upload_Icon fill = '#757575' height = '4rem'/>\n                <label className = \"label1\"> Drag and Drop files here</label>\n                <label className = \"label2\"> OR </label>\n                <input type = \"file\" id = \"select_file\" onChange = {this.select_file} hidden />\n                <label for = \"select_file\" className = \"browse_label\"> {this.state.browse_label} </label>\n                <label className = \"label3\"> {this.state.filename} </label>\n              </div>\n\n            </DragAndDrop>\n\n            <button className = \"upload_btn\" onClick = {this.upload_file}> Upload File </button>\n\n          </div>\n\n          <div className = \"query_list_container\">\n\n            <div className = \"query_container\">\n              <h3> Task1: Split into 3 datasets </h3>\n              <label className = \"query_desc_label\"> Split the input data into 3 child datasets based upon if their Compound ID ends with LPC, PC or plasmalogen </label>\n\n              <div className = \"form_container\">\n                <input type = \"text\" readonly=\"readonly\" placeholder = \"File name\" id = \"input1\" value = {this.state.filename} oninput = \"handle\" />\n                <button className = \"submit_btn\" onClick = {this.perform_task1} disabled = {this.state.service_requested}> Submit </button>\n              </div>\n\n            </div>\n\n            <div className = \"query_container\">\n              <h3> Task2: Roundoff Retention time </h3>\n              <label className = \"query_desc_label\"> Roundoff the retention time of samples to the nearest natural number </label>\n\n              <div className = \"form_container\">\n                <input type = \"text\" readonly=\"readonly\" placeholder = \"File name\" value = {this.state.filename} />\n                <button className = \"submit_btn\" onClick = {this.perform_task2} disabled = {this.state.service_requested}> Submit </button>\n              </div>\n\n            </div>\n\n            <div className = \"query_container\">\n              <h3> Task3: Mean of metabolites with same rounded off retention </h3>\n              <label className = \"query_desc_label\"> After task 2, find mean of all the metabolites which have same Rounded off Retention time across all the samples </label>\n\n              <div className = \"form_container\">\n                <input type = \"text\" readonly=\"readonly\" placeholder = \"Filename\" value = {this.state.filename} />\n                <button className = \"submit_btn\" onClick = {this.perform_task3} disabled = {this.state.service_requested}> Submit </button>\n              </div>\n\n            </div>\n\n          </div>\n\n        </div>\n\n      </div>\n    );\n\n  }\n}\n\nexport default Home;\n","/home/gau1rav/Desktop/React/elucidata-client/src/components/Navbar.js",[],"/home/gau1rav/Desktop/React/elucidata-client/src/components/DragAndDrop.js",[],["37","38"],{"ruleId":"39","severity":1,"message":"40","line":4,"column":8,"nodeType":"41","messageId":"42","endLine":4,"endColumn":11},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":98,"column":17,"nodeType":"49","messageId":"50","endLine":98,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":127,"column":17,"nodeType":"49","messageId":"50","endLine":127,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":157,"column":17,"nodeType":"49","messageId":"50","endLine":157,"endColumn":19},{"ruleId":"51","severity":1,"message":"52","line":195,"column":17,"nodeType":"53","endLine":195,"endColumn":64},{"ruleId":"43","replacedBy":"54"},{"ruleId":"45","replacedBy":"55"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["56"],"no-negated-in-lhs",["57"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component Upload_Icon must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement",["56"],["57"],"no-global-assign","no-unsafe-negation"]